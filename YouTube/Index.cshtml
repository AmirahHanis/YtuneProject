<head>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap" rel="stylesheet"> <!-- Add Open Sans font -->
    <style>
        /* Set the background color for the entire page */
        body {
            background-color:white;
            margin: 0;
            padding: 0;
        }

        h2 {
            color: black; /* Set h2 color */
            font-family: 'Montserrat', sans-serif; /* Apply Montserrat font */
            font-weight: bold; /* Make the text bold */
            margin: 0; /* Remove default margin for h2 */
        }

        h4 {
            color: white; /* Set h3 color */
            font-family: 'Montserrat', sans-serif; /* Apply Montserrat font */
            font-weight: bold; /* Make the text bold */
            margin: 0; /* Remove default margin for h3 */
        }

        /* Style for p elements */
        p {
            font-family: 'Open Sans', sans-serif; /* Apply Open Sans font */
            color: white; /* Optional: Set paragraph color for visibility */
        }

        /* Vars */
        :root {
            --rad: .7rem;
            --dur: .3s;
            --color-dark: #2f2f2f;
            --color-light: #fff;
            --color-brand: #57bd84;
            --font-fam: 'Lato', sans-serif;
            --height: 3rem; /* Reduced height for the input and button */
            --btn-width: 5rem; /* Reduced button width */
            --bez: cubic-bezier(0, 0, 0.43, 1.49);
        }

        /* Form styles */
        form {
            position: relative;
            width: 20rem; /* Reduced form width */
            background: var(--color-brand);
            border-radius: var(--rad);
            margin-top: 20px;
        }

        input, button {
            height: var(--height);
            font-family: var(--font-fam);
            border: 0;
            color: var(--color-dark);
            font-size: 1.4rem; /* Reduced font size */
        }

        input[type="text"] {
                outline: 0;
                width: 100%;
                background: var(--color-light);
                padding: 0 1.6rem;
                border-radius: var(--rad);
                transition: all var(--dur) var(--bez);
                transition-property: width, border-radius;
        }

        button {
            display: none;
            position: absolute;
            top: 0;
            right: 0;
            width: var(--btn-width);
            font-weight: bold;
            background: white;
            border-radius: 0 var(--rad) var(--rad) 0;
        }

        input:not(:placeholder-shown) {
            border-radius: var(--rad) 0 0 var(--rad);
            width: calc(100% - var(--btn-width));
        }

            input:not(:placeholder-shown) + button {
                display: block;
            }

        label {
            position: absolute;
            clip: rect(1px, 1px, 1px, 1px);
            padding: 0;
            border: 0;
            height: 1px;
            width: 1px;
            overflow: hidden;
            font-size: 0.8rem; /* Reduce label font size */
        }

        /* Watch button styles */
        .watch-button {
            display: inline-block;
            background-color: white;
            color: #101b41;
            padding: 0.5rem 1rem;
            text-align: center;
            text-decoration: none;
            border-radius: var(--rad);
            font-weight: bold;
            font-size: 1.2rem;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

         .watch-button:hover {
                background-color: #57bd84; /* Optional hover effect */
         **}

        /* Video grid container */
        .video-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr); /* 3 columns */
            gap: 20px; /* Space between columns */
            margin-top: 30px;
        }

        /* Style for individual video cards */
        .video-card {
            background-color: #2f2f2f;
            border-radius: var(--rad);
            padding: 20px;
            text-align: center;
            transition: transform 0.3s ease;
        }

            .video-card:hover {
                transform: translateY(-10px); /* Lift on hover */
            }

            .video-card img {
                max-width: 100%;
                border-radius: var(--rad);
                margin-bottom: 10px;
            }

            .video-card h4, .video-card p {
                margin-bottom: 10px;
            }

    </style>
</head>

@model List<YouTubeApiProject.Models.YouTubeVideoModel>
<h2><br> <!-- Line break for spacing -->Search YouTube Videos</h2>

<form asp-action="Search" method="post">
    <label for="query">Search for videos</label>
    <input id="query" type="text" name="query" placeholder="Search..." required />
    <button type="submit">Go</button>
</form>

@if (Model != null && Model.Any())
{
    <div class="video-grid">
        @foreach (var video in Model)
        {
            <div class="video-card">
                <img src="@video.ThumbnailUrl" alt="@video.Title" />
                <h4>@video.Title</h4>
                <p>@video.Description</p>
                <a href="@video.VideoUrl" target="_blank" class="watch-button">Watch</a>
            </div>
        }
    </div>
}
